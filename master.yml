AWSTemplateFormatVersion: '2010-09-09'
Description: 'Foundations: Master for laying the foundations of of SportsBook.'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Bucket Details'
      Parameters:
      - ArtifactStoreS3
      - TemplateStoreS3
    - Label:
        default: 'Repository Details'
      Parameters:
      - SourceRepo
      - SourceBranch
Parameters:
  ArtifactStoreS3:
    Description: 'Bucket for storing artifacts.'
    Type: String
  TemplateStoreS3:
    Description: 'Bucket for storing templates and scripts.'
    Type: String
  SourceRepo:
    Description: 'CodeCommit repository name of foundations.'
    Type: String
  SourceBranch:
    Description: 'Repository branch'
    Type: String
Resources:
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-CodePipelineRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "codepipeline.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      -
        PolicyName: "CodePipelineNestedCFNAccessPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "s3:DeleteObject"
            - "s3:GetBucketVersioning"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            - "s3:PutObject"
            - "s3:GetBucketPolicy"
            Resource:
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}'
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}/*'
          -
            Effect: "Allow"
            Action:
            - "sns:Publish"
            Resource:
            - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*'
          -
            Effect: "Allow"
            Action:
            - "codecommit:ListBranches"
            - "codecommit:ListRepositories"
            - "codecommit:BatchGetRepositories"
            - "codecommit:Get*"
            - "codecommit:GitPull"
            - "codecommit:UploadArchive"
            Resource:
            - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepo}'
          -
            Effect: "Allow"
            Action:
            - "codebuild:StartBuild"
            - "codebuild:BatchGetBuilds"
            Resource:
            - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-MasterProject'
            - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${AWS::StackName}-MasterProject:*'
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-CodeBuildRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "codebuild.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /service-role/
      Policies:
      -
        PolicyName: "CodeBuildNestedCFNAccessPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "ec2:Describe*"
            - "cloudformation:ValidateTemplate"
            - "autoscaling:Describe*"
            - "iam:Get*"
            - "iam:List*"
            - "logs:Describe*"
            - "logs:Get*"
            - "tag:Get*"
            - "ssm:GetParameters"
            Resource:
            - "*"
          -
            Effect: "Allow"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
          -
            Effect: "Allow"
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            Resource:
            - !Sub 'arn:aws:s3:::codepipeline-${AWS::Region}-*'
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}/*'
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}'
          -
            Effect: "Allow"
            Action:
            - "codecommit:BatchGet*"
            - "codecommit:Get*"
            - "codecommit:List*"
            - "codecommit:Describe*"
            - "codecommit:Put*"
            - "codecommit:Post*"
            - "codecommit:Merge*"
            - "codecommit:Test*"
            - "codecommit:Update*"
            - "codecommit:GitPull"
            - "codecommit:GitPush"
            Resource:
            - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepo}'
  MasterPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3
      Name: !Sub '${AWS::StackName}-MasterPipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
      - Name: Source
        Actions:
        - Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: CodeCommit
          OutputArtifacts:
          - Name: SourceOutput
          Configuration:
            BranchName: !Ref SourceBranch
            RepositoryName: !Ref SourceRepo
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: BuildAction
          InputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          OutputArtifacts:
          - Name: BuildArtifact
          Configuration:
            ProjectName: !Ref MasterProject
          RunOrder: 1
  MasterProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-MasterProject'
      Description: 'Validate, parse and store operations and templates'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
        - Name: TEMPLATE_BUCKET
          Value: !Ref TemplateStoreS3
        - Name: TEMPLATE_PREFIX
          Value: !Ref AWS::StackName
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      EncryptionKey: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-MasterProject'
      - Key: Group
        Value: 'Scoreboards Fixed'
      - Key: Client
        Value: 'Internal'
Outputs:
  Pipeline:
    Description: URL of master pipeline.
    Value: !Sub "https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${MasterPipeline}"
