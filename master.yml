AWSTemplateFormatVersion: '2010-09-09'
Description: 'Foundations: Master for laying the foundations of SportsBook.'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Bucket Details'
      Parameters:
      - ArtifactStoreS3
      - TemplateStoreS3
    - Label:
        default: 'Repository Details'
      Parameters:
      - SourceRepo
      - SourceBranch
Parameters:
  ArtifactStoreS3:
    Description: 'Bucket for storing artifacts.'
    Type: String
  TemplateStoreS3:
    Description: 'Bucket for storing templates and scripts.'
    Type: String
  SourceRepo:
    Description: 'CodeCommit repository name of foundations.'
    Type: String
  SourceBranch:
    Description: 'Repository branch'
    Type: String
Resources:
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-CodePipelineRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        -
          Effect: 'Allow'
          Principal:
            Service:
            - 'codepipeline.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: /
      Policies:
      -
        PolicyName: 'CodePipelineNestedCFNAccessPolicy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          -
            Effect: 'Allow'
            Action:
            - 's3:DeleteObject'
            - 's3:GetBucketVersioning'
            - 's3:GetObject'
            - 's3:GetObjectVersion'
            - 's3:ListBucket'
            - 's3:PutObject'
            - 's3:GetBucketPolicy'
            Resource:
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}'
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}/*'
          -
            Effect: 'Allow'
            Action:
            - 'sns:Publish'
            Resource:
            - !Sub 'arn:aws:sns:${AWS::Region}:${AWS::AccountId}:*'
          -
            Effect: 'Allow'
            Action:
            - 'codecommit:ListBranches'
            - 'codecommit:ListRepositories'
            - 'codecommit:BatchGetRepositories'
            - 'codecommit:Get*'
            - 'codecommit:GitPull'
            - 'codecommit:UploadArchive'
            Resource:
            - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepo}'
          -
            Effect: 'Allow'
            Action:
            - 'codebuild:StartBuild'
            - 'codebuild:BatchGetBuilds'
            Resource:
            - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AWS::StackName}-MasterProject'
            - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/${AWS::StackName}-MasterProject:*'
          -
            Effect: "Allow"
            Action:
            - "iam:PassRole"
            Resource:
            - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-CloudFormationRole'
  CodeBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-CodeBuildRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        -
          Effect: 'Allow'
          Principal:
            Service:
            - 'codebuild.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: /service-role/
      Policies:
      -
        PolicyName: 'CodeBuildNestedCFNAccessPolicy'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          -
            Effect: 'Allow'
            Action:
            - 'ec2:Describe*'
            - 'cloudformation:ValidateTemplate'
            - 'autoscaling:Describe*'
            - 'iam:Get*'
            - 'iam:List*'
            - 'logs:Describe*'
            - 'logs:Get*'
            - 'tag:Get*'
            - 'ssm:GetParameters'
            Resource:
            - '*'
          -
            Effect: 'Allow'
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            Resource:
            - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
          -
            Effect: 'Allow'
            Action:
            - 's3:PutObject'
            - 's3:GetObject'
            - 's3:GetObjectVersion'
            - 's3:ListBucket'
            Resource:
            - !Sub 'arn:aws:s3:::codepipeline-${AWS::Region}-*'
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}/*'
            - !Sub 'arn:aws:s3:::${ArtifactStoreS3}'
            - !Sub 'arn:aws:s3:::${TemplateStoreS3}/*'
            - !Sub 'arn:aws:s3:::${TemplateStoreS3}'
          -
            Effect: 'Allow'
            Action:
            - 'codecommit:BatchGet*'
            - 'codecommit:Get*'
            - 'codecommit:List*'
            - 'codecommit:Describe*'
            - 'codecommit:Put*'
            - 'codecommit:Post*'
            - 'codecommit:Merge*'
            - 'codecommit:Test*'
            - 'codecommit:Update*'
            - 'codecommit:GitPull'
            - 'codecommit:GitPush'
            Resource:
            - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${SourceRepo}'
  CloudFormationRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub '${AWS::StackName}-CloudFormationRole'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "cloudformation.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      -
        PolicyName: "CloudFormationAccessPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "iam:AddRoleToInstanceProfile"
            - "iam:AttachRolePolicy"
            - "iam:CreateInstanceProfile"
            - "iam:CreatePolicy"
            - "iam:CreateRole"
            - "iam:CreateServiceLinkedRole"
            - "iam:DeleteInstanceProfile"
            - "iam:DeletePolicy"
            - "iam:DeleteRole"
            - "iam:DeleteRolePolicy"
            - "iam:DetachRolePolicy"
            - "iam:GetInstanceProfile"
            - "iam:GetPolicy"
            - "iam:GetRole"
            - "iam:GetRolePolicy"
            - "iam:ListAttachedRolePolicies"
            - "iam:ListInstanceProfiles"
            - "iam:ListInstanceProfilesForRole"
            - "iam:ListRolePolicies"
            - "iam:ListRoles"
            - "iam:PassRole"
            - "iam:PutRolePolicy"
            - "iam:RemoveRoleFromInstanceProfile"
            Resource:
            - !Sub 'arn:aws:iam::${AWS::AccountId}:role/SB-OpSec'
          -
            Effect: "Allow"
            Action:
            - "cloudwatch:DeleteAlarms"
            - "cloudwatch:DescribeAlarms"
            - "cloudwatch:DescribeAlarmsForMetric"
            - "cloudwatch:GetMetricStatistics"
            - "cloudwatch:ListMetrics"
            - "cloudwatch:PutMetricAlarm"
            - "cloudwatch:PutMetricData"
            - "ssm:DescribeParameters"
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:DeleteLogGroup"
            - "logs:DeleteLogStream"
            - "logs:DescribeLogGroups"
            - "logs:DescribeLogStreams"
            - "logs:GetLogEvents"
            - "logs:ListTagsLogGroup"
            - "logs:PutDestination"
            - "logs:PutLogEvents"
            - "logs:TagLogGroup"
            - "lambda:*"
            - "events:*"
            Resource:
            - "*"
  MasterProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-MasterProject'
      Description: 'Validate, parse and store operations and templates'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
        - Name: TEMPLATE_BUCKET
          Value: !Ref TemplateStoreS3
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10
      EncryptionKey: !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3'
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}-MasterProject'
      - Key: Group
        Value: 'Scoreboards Fixed'
      - Key: Client
        Value: 'Internal'
  MasterPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStoreS3
      Name: !Sub '${AWS::StackName}-MasterPipeline'
      RoleArn: !GetAtt CodePipelineRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
      - Name: Source
        Actions:
        - Name: SourceAction
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: 1
            Provider: CodeCommit
          OutputArtifacts:
          - Name: SourceOutput
          Configuration:
            BranchName: !Ref SourceBranch
            RepositoryName: !Ref SourceRepo
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: BuildAction
          InputArtifacts:
          - Name: SourceOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          OutputArtifacts:
          - Name: BuildArtifact
          Configuration:
            ProjectName: !Ref MasterProject
          RunOrder: 1
      - Name: Deploy
        Actions:
        - Name: OpSecChangeSet
          InputArtifacts:
          - Name: BuildArtifact
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          - Name: CreatedOpSecChangeSet
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            ChangeSetName: OpSecChangeSet
            RoleArn: !GetAtt CloudFormationRole.Arn
            Capabilities: CAPABILITY_NAMED_IAM
            StackName: 'SB-OpSec'
            TemplatePath: BuildArtifact::operations/opsec.yml
            TemplateConfiguration: BuildArtifact::operations/configs/opsec.json
            ParameterOverrides: !Sub |
              {
                "ArtifactStoreS3": "${ArtifactStoreS3}"
              }
          RunOrder: 1
        - Name: SlackChangeSet
          InputArtifacts:
          - Name: BuildArtifact
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          - Name: CreatedSlackChangeSet
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            ChangeSetName: SlackChangeSet
            RoleArn: !GetAtt CloudFormationRole.Arn
            Capabilities: CAPABILITY_NAMED_IAM
            StackName: 'SB-Slack'
            TemplatePath: BuildArtifact::operations/slack.yml
            TemplateConfiguration: BuildArtifact::operations/configs/slack.json
            ParameterOverrides: !Sub |
              {
                "LambdaStoreS3": "${TemplateStoreS3}"
              }
          RunOrder: 1

Outputs:
  Pipeline:
    Description: URL of master pipeline.
    Value: !Sub 'https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${MasterPipeline}'
